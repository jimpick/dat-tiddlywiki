title: $:/language/Help/server
description: 提供一個 HTTP 伺服器介面到 TiddlyWiki

在伺服器中內建 TiddlyWiki5 是非常簡單。雖與 TiddlyWeb 相容，但不支援許多健全網際網路面向的使用方式所需的功能。

提供呈現一個指定條目，也可將個別條目編碼成 JSON，且支援基本的 HTTP 操作 `GET`、`PUT` 及 `DELETE`.

```
--server <port> <roottiddler> <rendertype> <servetype> <username> <password> <host> <pathprefix>
```

參數說明：

* ''port'' - 要偵聽的埠號；非數值會被解譯為一個系統環境變數，從其中提取埠號 (預設值為 "8080")
* ''roottiddler'' - 服務的基本條目 (預設為 "$:/core/save/all")
* ''rendertype'' - 呈現的基本條目內容類型 (預設為 "text/plain")
* ''servetype'' - 服務的基本條目內容類型(預設為 "text/html")
* ''username'' - 預設的編輯者署名
* ''password'' - 選擇性的基本驗證密碼
* ''host'' - 選擇性的主機名稱， (預設為 "127.0.0.1" 或名為 "localhost")
* ''pathprefix'' - 選擇性的路徑前綴

若指定密碼參數，瀏覽器將提示使用者輸入帳號與密碼。注意，密碼係以明碼方式傳遞，因此並不適合一般正式用途。

例如：

```
--server 8080 $:/core/save/all text/plain text/html MyUserName passw0rd
```

若您需要設定主機名稱或路徑前綴而不要求輸入密碼，則可以指定空字串的使用者名和密碼：

```
--server 8080 $:/core/save/all text/plain text/html "" "" 192.168.0.245
```

同時執行多個 TiddlyWiki 伺服器，須分別指定不同的埠號。使用環境變數，有助於將埠號傳遞給 Node.js 進程。本示例引用一個名為 "MY_PORT_NUMBER" 的環境變數:

```
--server MY_PORT_NUMBER $:/core/save/all text/plain text/html MyUserName passw0rd
```